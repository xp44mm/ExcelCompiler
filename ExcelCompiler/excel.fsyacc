%{
open ExcelCompiler.ExcelTokenUtils
%}

formula : "=" expr { s1 }
        ;
expr    : FUNCTION "(" arguments ")" {Func(s0, List.rev s2)}
        | REFERENCE                  {Reference s0}
        | NUMBER                     {Number s0}
        | QUOTE                      {Quote s0}
        | FALSE                      {False}
        | TRUE                       {True}
        | "(" expr ")"               {s1}
        | expr "="  expr             {Eq(s0,s2)}
        | expr "<"  expr             {Lt(s0,s2)}
        | expr "<=" expr             {Le(s0,s2)}
        | expr ">"  expr             {Gt(s0,s2)}
        | expr ">=" expr             {Ge(s0,s2)}
        | expr "<>" expr             {Ne(s0,s2)}
        | expr "&" expr              {Concat(s0,s2)}
        | expr "+" expr              {Add(s0,s2)}
        | expr "-" expr              {Sub(s0,s2)}
        | expr "*" expr              {Mul(s0,s2)}
        | expr "/" expr              {Div(s0,s2)}
        | expr "^" expr              {Pow(s0,s2)}
        | expr "%"                   {Percent s0}
        | POSITIVE expr              {Positive s1}
        | NEGATIVE expr              {Negative s1}
        ;
arguments : (* empty *)        {[]}
          | expr               {[s0]}
          | arguments "," expr {s2::s0}
          ;

%%

%nonassoc "<" "<=" "<>" "=" ">" ">="
%left "&"
%left "+" "-"
%left "*" "/"
%left "^"
%left "%"
%right POSITIVE NEGATIVE

%%

FUNCTION  "string";
NUMBER    "string";
QUOTE     "string";
REFERENCE "string list*string list";
arguments "ExcelExpr list";
expr      "ExcelExpr";
formula   "ExcelExpr";