%{
open FslexFsyacc.Runtime
open ExcelCompiler.ExcelTokenUtils
type token = ExcelToken
%}

unary   = [POSITIVE NEGATIVE]
worksheet  = [ID APOSTROPHE]
worksheets = <worksheet> (":" <worksheet>)? "!"
cell       = [ DOLLAR ID INTEGER ]
cells      = <cell> ":" <cell>
range   = [ DOLLAR ID ] | <cells>
wsrange = <worksheets>? <range>
others = [NUMBER QUOTE ERROR FALSE TRUE "," "(" ")" "=" "<>" "<" "<=" ">" ">=" "&" "+" "-" "*" "/" "^" "%" POSITIVE NEGATIVE "{" "}" "[" "]" ]
%%

<unary> / INTEGER ":"	   { lexbuf}
<unary> [ INTEGER NUMBER ] { signNumber lexbuf}
ID / "("				   { [functionFromId lexbuf.Head]}
<wsrange>				   { [REFERENCE(getRange lexbuf)]}
INTEGER					   { [numberFromInteger lexbuf.Head]}
<others>				   { lexbuf}