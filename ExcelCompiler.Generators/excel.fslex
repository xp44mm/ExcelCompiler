%{
open FslexFsyacc
open ExcelCompiler.ExcelTokenUtils
type token = PositionWith<ExcelToken>
%}

<unary>   = [POSITIVE NEGATIVE]
<worksheet>  = [ID APOSTROPHE]
<worksheets> = <worksheet> (":" <worksheet>)? "!"
<cell>       = [ DOLLAR ID INTEGER ]
<cells>      = <cell> ":" <cell>
<range>   = [ DOLLAR ID ] | <cells>
<wsrange> = <worksheets>? <range>
<others> = [NUMBER QUOTE ERROR FALSE TRUE "," "(" ")" "=" "<>" "<" "<=" ">" ">=" "&" "+" "-" "*" "/" "^" "%" POSITIVE NEGATIVE "{" "}" "[" "]" ]
%%

<unary> / INTEGER ":"      { lexbuf.Head }
<unary> [ INTEGER NUMBER ] { signNumber lexbuf }
ID / "("                   { functionFromId lexbuf }
<wsrange>                  { getReference lexbuf }
INTEGER                    { numberFromInteger lexbuf }
<others>                   { lexbuf.Head }

